{"version":3,"file":"svg-turtle.esm.js","sources":["../node_modules/javascript-interface-library/dist/javascript-interface-library.esm.js","../src/svg-turtle.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                        JavaScript Interface Library                        //\n//----------------------------------------------------------------------------//\n/**** get a reference to the \"global\" object ****/\nvar global = /*#__PURE__*/ Function('return this')();\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n//------------------------------------------------------------------------------\n//--                             Object Functions                             --\n//------------------------------------------------------------------------------\n// allow methods from Object.prototype to be applied to \"vanilla\" objects\n/**** Object_hasOwnProperty ****/\nfunction Object_hasOwnProperty(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('hasOwnProperty' in Value) && (typeof Value.hasOwnProperty === 'function')\n        ? Value.hasOwnProperty(PropertyName)\n        : Object.prototype.hasOwnProperty.call(Value, PropertyName));\n}\n/**** Object_isPrototypeOf ****/\nfunction Object_isPrototypeOf(Value, Candidate) {\n    return ((Value == null) || // let this method crash like its original\n        ('isPrototypeOf' in Value) && (typeof Value.isPrototypeOf === 'function')\n        ? Value.isPrototypeOf(Candidate)\n        : Object.prototype.isPrototypeOf.call(Value, Candidate));\n}\n/**** Object_propertyIsEnumerable ****/\nfunction Object_propertyIsEnumerable(Value, PropertyName) {\n    return ((Value == null) || // let this method crash like its original\n        ('propertyIsEnumerable' in Value) && (typeof Value.propertyIsEnumerable === 'function')\n        ? Value.propertyIsEnumerable(PropertyName)\n        : Object.prototype.propertyIsEnumerable.call(Value, PropertyName));\n}\n/**** Object_toString ****/\nfunction Object_toString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toString' in Value) && (typeof Value.toString === 'function')\n        ? Value.toString()\n        : Object.prototype.toString.call(Value));\n}\n/**** Object_toLocaleString ****/\nfunction Object_toLocaleString(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('toLocaleString' in Value) && (typeof Value.toLocaleString === 'function')\n        ? Value.toLocaleString()\n        : Object.prototype.toString.call(Value)); // a missing \"toLocaleString\" method will crash Object.prototype.toLocaleString\n}\n/**** Object_valueOf ****/\nfunction Object_valueOf(Value) {\n    return ((Value == null) || // let this method crash like its original\n        ('valueOf' in Value) && (typeof Value.valueOf === 'function')\n        ? Value.valueOf()\n        : Object.prototype.valueOf.call(Value));\n}\n/**** ObjectMergedWith ****/\nfunction ObjectMergedWith(TargetObject) {\n    var otherObjectList = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        otherObjectList[_i - 1] = arguments[_i];\n    }\n    for (var i = 0, l = otherObjectList.length; i < l; i++) {\n        var otherObject = otherObjectList[i];\n        if (otherObject == null) {\n            continue;\n        }\n        if (typeof otherObject === 'object') {\n            for (var Key in otherObject) {\n                var Descriptor = Object.getOwnPropertyDescriptor(otherObject, Key);\n                if (Descriptor != null) {\n                    Object.defineProperty(TargetObject, Key, Descriptor);\n                }\n            }\n        }\n        else {\n            throwError('InvalidArgument: argument #' + (i + 1) + ' is not an object');\n        }\n    }\n    return TargetObject;\n}\n/**** throwError - simplifies construction of named errors ****/\nfunction throwError(Message) {\n    var Match = /^([$a-zA-Z][$a-zA-Z0-9]*):\\s*(\\S.+)\\s*$/.exec(Message);\n    if (Match == null) {\n        throw new Error(Message);\n    }\n    else {\n        var namedError = new Error(Match[2]);\n        namedError.name = Match[1];\n        throw namedError;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Value Classification Functions                      --\n//------------------------------------------------------------------------------\n/**** ValueExists ****/\nfunction ValueExists(Value) {\n    return (Value != null);\n}\n/**** ValueIsMissing ****/\nfunction ValueIsMissing(Value) {\n    return (Value == null);\n}\n/**** ValueIsBoolean ****/\nfunction ValueIsBoolean(Value) {\n    return (typeof Value === 'boolean') || (Value instanceof Boolean);\n}\n/**** ValueIsNumber ****/\nfunction ValueIsNumber(Value) {\n    return (typeof Value === 'number') || (Value instanceof Number);\n}\n/**** ValueIsFiniteNumber (pure \"isFinite\" breaks on objects) ****/\nfunction ValueIsFiniteNumber(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isFinite(Value.valueOf());\n}\n/**** ValueIsNaN (numeric, but NaN - this differs from pure \"isNaN\") ****/\nfunction ValueIsNaN(Value) {\n    return ((typeof Value === 'number') || (Value instanceof Number)) && isNaN(Value.valueOf());\n}\n/**** ValueIsNumberInRange ****/\nfunction ValueIsNumberInRange(Value, minValue, maxValue, withMin, withMax) {\n    if (withMin === void 0) { withMin = true; }\n    if (withMax === void 0) { withMax = true; }\n    if (!ValueIsNumber(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (!withMin && (Value === minValue)) ||\n                (Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n        else {\n            if ((Value < minValue) || (!withMin && (Value === minValue))) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value > maxValue) || (!withMax && (Value === maxValue))) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsInteger ****/\nfunction ValueIsInteger(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value);\n}\n/**** ValueIsIntegerInRange ****/\nfunction ValueIsIntegerInRange(Value, minValue, maxValue) {\n    if (!ValueIsInteger(Value) || isNaN(Value)) {\n        return false;\n    }\n    if (ValueIsFiniteNumber(minValue)) { // more robust than \"isFinite\" alone\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if ((Value < minValue) || (Value > maxValue)) {\n                return false;\n            }\n        }\n        else {\n            if (Value < minValue) {\n                return false;\n            }\n        }\n    }\n    else {\n        if (ValueIsFiniteNumber(maxValue)) { // more robust than \"isFinite\" alone\n            if (Value > maxValue) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**** ValueIsOrdinal ****/\nfunction ValueIsOrdinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 0);\n}\n/**** ValueIsCardinal ****/\nfunction ValueIsCardinal(Value) {\n    if ((typeof Value !== 'number') && !(Value instanceof Number)) {\n        return false;\n    }\n    Value = Value.valueOf();\n    return isFinite(Value) && (Math.round(Value) === Value) && (Value >= 1);\n}\n/**** ValueIsString ****/\nfunction ValueIsString(Value) {\n    return (typeof Value === 'string') || (Value instanceof String);\n}\n/**** ValueIs[Non]EmptyString ****/\nvar emptyStringPattern = /^\\s*$/;\nfunction ValueIsEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && emptyStringPattern.test(Value.valueOf());\n}\nfunction ValueIsNonEmptyString(Value) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && !emptyStringPattern.test(Value.valueOf());\n}\n/**** ValueIsStringMatching ****/\nfunction ValueIsStringMatching(Value, Pattern) {\n    return ((typeof Value === 'string') || (Value instanceof String)) && Pattern.test(Value.valueOf());\n}\n/**** ValueIsText ****/\nvar noCtrlCharsButCRLFPattern = /^[^\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsText(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsButCRLFPattern);\n}\n/**** ValueIsTextline ****/\nvar noCtrlCharsPattern = /^[^\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsTextline(Value) {\n    return ValueIsStringMatching(Value, noCtrlCharsPattern);\n}\n/**** ValueIsFunction ****/\nfunction ValueIsFunction(Value) {\n    return (typeof Value === 'function');\n}\n/**** ValueIsAnonymousFunction ****/\nfunction ValueIsAnonymousFunction(Value) {\n    return ((typeof Value === 'function') &&\n        ((Value.name == null) || (Value.name === '')));\n}\n/**** ValueIsNamedFunction ****/\nfunction ValueIsNamedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        (Value.name != null) && (Value.name !== ''));\n}\n/**** ValueIsNativeFunction ****/\nfunction ValueIsNativeFunction(Value) {\n    return ((typeof Value === 'function') &&\n        /^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsScriptedFunction ****/\nfunction ValueIsScriptedFunction(Value) {\n    return ((typeof Value === 'function') &&\n        !/^function\\s*[^(]*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/.test(Value.toString()));\n}\n/**** ValueIsObject ****/\nfunction ValueIsObject(Value) {\n    return (Value != null) && (typeof Value === 'object');\n}\n/**** ValueIsPlainObject ****/\nfunction ValueIsPlainObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        (Object.getPrototypeOf(Value) === Object.prototype));\n}\n/**** ValueIsVanillaObject ****/\nfunction ValueIsVanillaObject(Value) {\n    return ((Value != null) && (typeof Value === 'object') &&\n        !(Value instanceof Object));\n}\n/**** ValueIsArray ****/\nvar ValueIsArray = Array.isArray;\n/**** ValueIsList (\"dense\" array) ****/\nfunction ValueIsList(Value, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        for (var i = 0, l = Value.length; i < l; i++) {\n            if (Value[i] === undefined) {\n                return false;\n            }\n        }\n        if (minLength != null) {\n            if (Value.length < minLength) {\n                return false;\n            }\n        }\n        if (maxLength != null) {\n            if (Value.length > maxLength) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}\n/**** ValueIsListSatisfying ****/\nfunction ValueIsListSatisfying(Value, Validator, minLength, maxLength) {\n    if (ValueIsArray(Value)) {\n        try {\n            for (var i = 0, l = Value.length; i < l; i++) {\n                if (Validator(Value[i]) == false) {\n                    return false;\n                }\n            }\n            if (minLength != null) {\n                if (Value.length < minLength) {\n                    return false;\n                }\n            }\n            if (maxLength != null) {\n                if (Value.length > maxLength) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        catch (Signal) { /* nop */ }\n    }\n    return false;\n}\n/**** ValueIsInstanceOf ****/\nfunction ValueIsInstanceOf(Value, Constructor) {\n    return (Value instanceof Constructor);\n}\n/**** ValueInheritsFrom ****/\nfunction ValueInheritsFrom(Value, Prototype) {\n    return Object_isPrototypeOf(Prototype, Value);\n}\n/**** ValueIsDate ****/\nfunction ValueIsDate(Value) {\n    return (Value instanceof Date);\n}\n/**** ValueIsError ****/\nfunction ValueIsError(Value) {\n    return (Value instanceof Error);\n}\n/**** ValueIsPromise ****/\nfunction ValueIsPromise(Value) {\n    return (Value != null) && (typeof Value.then === 'function');\n}\n// see https://stackoverflow.com/questions/27746304/how-do-i-tell-if-an-object-is-a-promise\n/**** ValueIsRegExp ****/\nfunction ValueIsRegExp(Value) {\n    return (Value instanceof RegExp);\n}\n/**** ValueIsOneOf ****/\nfunction ValueIsOneOf(Value, ValueList) {\n    return (ValueList.indexOf(Value) >= 0);\n} // no automatic unboxing of boxed values and vice-versa!\n/**** ValueIsColor ****/\nfunction ValueIsColor(Value) {\n    return ValueIsString(Value) && (ColorSet.hasOwnProperty(Value) ||\n        /^#[a-fA-F0-9]{6}$/.test(Value) ||\n        /^#[a-fA-F0-9]{8}$/.test(Value) ||\n        /^rgb\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+\\)$/.test(Value) || // not perfect\n        /^rgba\\([0-9]+,\\s*[0-9]+,\\s*[0-9]+,([01]|[0]?[.][0-9]+)\\)$/.test(Value) // dto.\n    );\n}\n/**** ValueIsEMailAddress ****/\nvar EMailAddressPattern = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n// see https://stackoverflow.com/questions/201323/how-to-validate-an-email-address-using-a-regular-expression\nfunction ValueIsEMailAddress(Value) {\n    return ValueIsStringMatching(Value, EMailAddressPattern);\n}\n/**** ValueIsURL ****/\nvar noCtrlCharsOrWhitespacePattern = /^[^\\s\\x00-\\x1F\\x7F-\\x9F\\u2028\\u2029\\uFFF9-\\uFFFB]*$/;\nfunction ValueIsURL(Value) {\n    if (!ValueIsStringMatching(Value, noCtrlCharsOrWhitespacePattern) ||\n        (Value === '')) {\n        return false;\n    }\n    try {\n        new URL(Value, 'file://');\n        return true;\n    }\n    catch (Signal) {\n        return false;\n    }\n}\n//------------------------------------------------------------------------------\n//--                      Argument Validation Functions                       --\n//------------------------------------------------------------------------------\nvar rejectNil = false;\nvar acceptNil = true;\n/**** validatedArgument ****/\nfunction validatedArgument(Description, Argument, ValueIsValid, NilIsAcceptable, Expectation) {\n    if (Argument == null) {\n        if (NilIsAcceptable) {\n            return Argument;\n        }\n        else {\n            throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n        }\n    }\n    else {\n        if (ValueIsValid(Argument)) {\n            switch (true) {\n                case Argument instanceof Boolean:\n                case Argument instanceof Number:\n                case Argument instanceof String:\n                    return Argument.valueOf(); // unboxes any primitives\n                default:\n                    return Argument;\n            }\n        }\n        else {\n            throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no valid \").concat(escaped(Expectation)));\n        }\n    }\n}\n/**** ValidatorForClassifier ****/\nfunction ValidatorForClassifier(Classifier, NilIsAcceptable, Expectation) {\n    var Validator = function (Description, Argument) {\n        return validatedArgument(Description, Argument, Classifier, NilIsAcceptable, Expectation);\n    };\n    var ClassifierName = Classifier.name;\n    if ((ClassifierName != null) && /^ValueIs/.test(ClassifierName)) {\n        var ValidatorName = ClassifierName.replace(// derive name from validator\n        /^ValueIs/, NilIsAcceptable ? 'allow' : 'expect');\n        return FunctionWithName(Validator, ValidatorName);\n    }\n    else {\n        return Validator; // without any specific name\n    }\n}\n/**** FunctionWithName (works with older JS engines as well) ****/\nfunction FunctionWithName(originalFunction, desiredName) {\n    if (originalFunction == null) {\n        throwError('MissingArgument: no function given');\n    }\n    if (typeof originalFunction !== 'function') {\n        throwError('InvalidArgument: the given 1st Argument is not a JavaScript function');\n    }\n    if (desiredName == null) {\n        throwError('MissingArgument: no desired name given');\n    }\n    if ((typeof desiredName !== 'string') && !(desiredName instanceof String)) {\n        throwError('InvalidArgument: the given desired name is not a string');\n    }\n    if (originalFunction.name === desiredName) {\n        return originalFunction;\n    }\n    try {\n        Object.defineProperty(originalFunction, 'name', { value: desiredName });\n        if (originalFunction.name === desiredName) {\n            return originalFunction;\n        }\n    }\n    catch (signal) { /* ok - let's take the hard way */ }\n    var renamed = new Function('originalFunction', 'return function ' + desiredName + ' () {' +\n        'return originalFunction.apply(this,Array.prototype.slice.apply(arguments))' +\n        '}');\n    return renamed(originalFunction);\n} // also works with older JavaScript engines\n/**** expect[ed]Value ****/\nfunction expectValue(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    else {\n        return Argument.valueOf();\n    }\n}\nvar expectedValue = expectValue;\n/**** allow/expect[ed]Boolean ****/\nvar allowBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, acceptNil, 'boolean value'), allowedBoolean = allowBoolean;\nvar expectBoolean = /*#__PURE__*/ ValidatorForClassifier(ValueIsBoolean, rejectNil, 'boolean value'), expectedBoolean = expectBoolean;\n/**** allow/expect[ed]Number ****/\nvar allowNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, acceptNil, 'numeric value'), allowedNumber = allowNumber;\nvar expectNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsNumber, rejectNil, 'numeric value'), expectedNumber = expectNumber;\n/**** allow/expect[ed]FiniteNumber ****/\nvar allowFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, acceptNil, 'finite numeric value'), allowedFiniteNumber = allowFiniteNumber;\nvar expectFiniteNumber = /*#__PURE__*/ ValidatorForClassifier(ValueIsFiniteNumber, rejectNil, 'finite numeric value'), expectedFiniteNumber = expectFiniteNumber;\n/**** allow/expect[ed]NaN ****/\nvar allowNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, acceptNil, 'NaN value'), allowedNaN = allowNaN;\nvar expectNaN = /*#__PURE__*/ ValidatorForClassifier(ValueIsNaN, rejectNil, 'NaN value'), expectedNaN = expectNaN;\n/**** allow[ed]NumberInRange ****/\nfunction allowNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    return (Argument == null\n        ? Argument\n        : expectedNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax));\n}\nvar allowedNumberInRange = allowNumberInRange;\n/**** expect[ed]NumberInRange ****/\nfunction expectNumberInRange(Description, Argument, minValue, maxValue, withMin, withMax) {\n    expectNumber(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is not-a-number\"));\n    }\n    if (withMin == null) {\n        withMin = true;\n    }\n    if (withMax == null) {\n        withMax = true;\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue)) ||\n                (Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" (\").concat(Argument, \") is outside \") +\n                    \"the allowed range (\".concat(minValue, \"...\").concat(maxValue, \")\"));\n            }\n        }\n        else {\n            if ((Argument < minValue) || (!withMin && (Argument === minValue))) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" is below the allowed \") +\n                    \"minimum (\".concat(Argument, \" \").concat(withMin ? '<' : '<=', \" \").concat(minValue, \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument > maxValue) || (!withMax && (Argument === maxValue))) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" exceeds the allowed \") +\n                    \"maximum (\".concat(Argument, \" \").concat(withMax ? '>' : '>=', \" \").concat(maxValue, \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedNumberInRange = expectNumberInRange;\n/**** allow/expect[ed]Integer ****/\nvar allowInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, acceptNil, 'integral numeric value'), allowedInteger = allowInteger;\nvar expectInteger = /*#__PURE__*/ ValidatorForClassifier(ValueIsInteger, rejectNil, 'integral numeric value'), expectedInteger = expectInteger;\n/**** allow[ed]IntegerInRange ****/\nfunction allowIntegerInRange(Description, Argument, minValue, maxValue) {\n    return (Argument == null\n        ? Argument\n        : expectedIntegerInRange(Description, Argument, minValue, maxValue));\n}\nvar allowedIntegerInRange = allowIntegerInRange;\n/**** expect[ed]IntegerInRange ****/\nfunction expectIntegerInRange(Description, Argument, minValue, maxValue) {\n    expectInteger(Description, Argument);\n    if (isNaN(Argument)) {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is not-a-number\"));\n    }\n    if ((minValue != null) && isFinite(minValue)) {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if ((Argument < minValue) || (Argument > maxValue)) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" (\").concat(Argument, \") is outside \") +\n                    \"the allowed range (\".concat(minValue, \"...\").concat(maxValue, \")\"));\n            }\n        }\n        else {\n            if (Argument < minValue) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" is below the allowed \") +\n                    \"minimum (\".concat(Argument, \" < \").concat(minValue, \")\"));\n            }\n        }\n    }\n    else {\n        if ((maxValue != null) && isFinite(maxValue)) {\n            if (Argument > maxValue) {\n                throw new RangeError(\"the given \".concat(escaped(Description), \" exceeds the allowed \") +\n                    \"maximum (\".concat(Argument, \" > \").concat(maxValue, \")\"));\n            }\n        }\n    }\n    return Argument.valueOf();\n}\nvar expectedIntegerInRange = expectIntegerInRange;\n/**** allow/expect[ed]Ordinal ****/\nvar allowOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, acceptNil, 'ordinal number'), allowedOrdinal = allowOrdinal;\nvar expectOrdinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsOrdinal, rejectNil, 'ordinal number'), expectedOrdinal = expectOrdinal;\n/**** allow/expect[ed]Cardinal ****/\nvar allowCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, acceptNil, 'cardinal number'), allowedCardinal = allowCardinal;\nvar expectCardinal = /*#__PURE__*/ ValidatorForClassifier(ValueIsCardinal, rejectNil, 'cardinal number'), expectedCardinal = expectCardinal;\n/**** allow/expect[ed]String ****/\nvar allowString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, acceptNil, 'literal string'), allowedString = allowString;\nvar expectString = /*#__PURE__*/ ValidatorForClassifier(ValueIsString, rejectNil, 'literal string'), expectedString = expectString;\n/**** allow/expect[ed]NonEmptyString ****/\nvar allowNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, acceptNil, 'non-empty literal string'), allowedNonEmptyString = allowNonEmptyString;\nvar expectNonEmptyString = /*#__PURE__*/ ValidatorForClassifier(ValueIsNonEmptyString, rejectNil, 'non-empty literal string'), expectedNonEmptyString = expectNonEmptyString;\n/**** allow[ed]StringMatching ****/\nfunction allowStringMatching(Description, Argument, Pattern) {\n    return (Argument == null\n        ? Argument\n        : expectedStringMatching(Description, Argument, Pattern));\n}\nvar allowedStringMatching = allowStringMatching;\n/**** expect[ed]StringMatching ****/\nfunction expectStringMatching(Description, Argument, Pattern) {\n    expectString(Description, Argument);\n    if (Pattern.test(Argument)) {\n        return Argument.valueOf();\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" does not match the specified pattern\"));\n    }\n}\nvar expectedStringMatching = expectStringMatching;\n/**** allow/expect[ed]Text ****/\nvar allowText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, acceptNil, 'literal text'), allowedText = allowText;\nvar expectText = /*#__PURE__*/ ValidatorForClassifier(ValueIsText, rejectNil, 'literal text'), expectedText = expectText;\n/**** allow/expect[ed]Textline ****/\nvar allowTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, acceptNil, 'single line of text'), allowedTextline = allowTextline;\nvar expectTextline = /*#__PURE__*/ ValidatorForClassifier(ValueIsTextline, rejectNil, 'single line of text'), expectedTextline = expectTextline;\n/**** allow/expect[ed]Function ****/\nvar allowFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, acceptNil, 'JavaScript function'), allowedFunction = allowFunction;\nvar expectFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsFunction, rejectNil, 'JavaScript function'), expectedFunction = expectFunction;\n/**** allow/expect[ed]AnonymousFunction ****/\nvar allowAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, acceptNil, 'anonymous JavaScript function'), allowedAnonymousFunction = allowAnonymousFunction;\nvar expectAnonymousFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsAnonymousFunction, rejectNil, 'anonymous JavaScript function'), expectedAnonymousFunction = expectAnonymousFunction;\n/**** allow/expect[ed]NamedFunction ****/\nvar allowNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, acceptNil, 'named JavaScript function'), allowedNamedFunction = allowNamedFunction;\nvar expectNamedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNamedFunction, rejectNil, 'named JavaScript function'), expectedNamedFunction = expectNamedFunction;\n/**** allow/expect[ed]NativeFunction ****/\nvar allowNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, acceptNil, 'native JavaScript function'), allowedNativeFunction = allowNativeFunction;\nvar expectNativeFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsNativeFunction, rejectNil, 'native JavaScript function'), expectedNativeFunction = expectNativeFunction;\n/**** allow/expect[ed]ScriptedFunction ****/\nvar allowScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, acceptNil, 'scripted JavaScript function'), allowedScriptedFunction = allowScriptedFunction;\nvar expectScriptedFunction = /*#__PURE__*/ ValidatorForClassifier(ValueIsScriptedFunction, rejectNil, 'scripted JavaScript function'), expectedScriptedFunction = expectScriptedFunction;\n/**** allow/expect[ed]Object ****/\nvar allowObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, acceptNil, 'JavaScript object'), allowedObject = allowObject;\nvar expectObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsObject, rejectNil, 'JavaScript object'), expectedObject = expectObject;\n/**** allow/expect[ed]PlainObject ****/\nvar allowPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, acceptNil, '\"plain\" JavaScript object'), allowedPlainObject = allowPlainObject;\nvar expectPlainObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsPlainObject, rejectNil, '\"plain\" JavaScript object'), expectedPlainObject = expectPlainObject;\n/**** allow/expect[ed]VanillaObject ****/\nvar allowVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, acceptNil, '\"vanilla\" JavaScript object'), allowedVanillaObject = allowVanillaObject;\nvar expectVanillaObject = /*#__PURE__*/ ValidatorForClassifier(ValueIsVanillaObject, rejectNil, '\"vanilla\" JavaScript object'), expectedVanillaObject = expectVanillaObject;\n/**** allow[ed]Array ****/\nfunction allowArray(Description, Argument) {\n    return (Argument == null\n        ? Argument\n        : expectedArray(Description, Argument));\n}\nvar allowedArray = allowArray;\n/**** expect[ed]Array ****/\nfunction expectArray(Description, Argument) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsArray(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no JavaScript array\"));\n    }\n}\nvar expectedArray = expectArray;\n/**** allow[ed]List ****/\nfunction allowList(Description, Argument, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedList(Description, Argument, Expectation, minLength, maxLength));\n}\nvar allowedList = allowList;\n/**** expect[ed]List ****/\nfunction expectList(Description, Argument, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsList(Argument, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is \") + (Expectation == null\n            ? 'either not a list or contains an invalid number of elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedList = expectList;\n/**** allow[ed]ListSatisfying ****/\nfunction allowListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    return (Argument == null\n        ? Argument\n        : expectedListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength));\n}\nvar allowedListSatisfying = allowListSatisfying;\n/**** expect[ed]ListSatisfying ****/\nfunction expectListSatisfying(Description, Argument, Validator, Expectation, minLength, maxLength) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsListSatisfying(Argument, Validator, minLength, maxLength)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is \") + (Expectation == null\n            ? 'either not a list or contains invalid elements'\n            : 'no ' + escaped(Expectation)));\n    }\n}\nvar expectedListSatisfying = expectListSatisfying;\n/**** allow[ed]InstanceOf ****/\nfunction allowInstanceOf(Description, Argument, constructor, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedInstanceOf(Description, Argument, constructor, Expectation));\n}\nvar allowedInstanceOf = allowInstanceOf;\n/**** expect[ed]InstanceOf ****/\nfunction expectInstanceOf(Description, Argument, constructor, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (!(Argument instanceof constructor)) {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no \").concat(escaped(Expectation)));\n    }\n    return Argument;\n}\nvar expectedInstanceOf = expectInstanceOf;\n/**** allow[ed]ValueInheritingFrom ****/\nfunction allowValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    return (Argument == null\n        ? Argument\n        : expectedValueInheritingFrom(Description, Argument, prototype, Expectation));\n}\nvar allowedValueInheritingFrom = allowValueInheritingFrom;\n/**** expect[ed]ValueInheritingFrom ****/\nfunction expectValueInheritingFrom(Description, Argument, prototype, Expectation) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (prototype.isPrototypeOf(Argument)) {\n        return Argument;\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is no \").concat(escaped(Expectation)));\n    }\n}\nvar expectedValueInheritingFrom = expectValueInheritingFrom;\n/**** allow/expect[ed]Date ****/\nvar allowDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, acceptNil, 'JavaScript Date object'), allowedDate = allowDate;\nvar expectDate = /*#__PURE__*/ ValidatorForClassifier(ValueIsDate, rejectNil, 'JavaScript Date object'), expectedDate = expectDate;\n/**** allow/expect[ed]Error ****/\nvar allowError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, acceptNil, 'JavaScript Error object'), allowedError = allowError;\nvar expectError = /*#__PURE__*/ ValidatorForClassifier(ValueIsError, rejectNil, 'JavaScript Error object'), expectedError = expectError;\n/**** allow/expect[ed]Promise ****/\nvar allowPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, acceptNil, 'JavaScript Promise (or \"Thenable\") object'), allowedPromise = allowPromise;\nvar expectPromise = /*#__PURE__*/ ValidatorForClassifier(ValueIsPromise, rejectNil, 'JavaScript Promise (or \"Thenable\") object'), expectedPromise = expectPromise;\n/**** allow/expect[ed]RegExp ****/\nvar allowRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, acceptNil, 'JavaScript RegExp object'), allowedRegExp = allowRegExp;\nvar expectRegExp = /*#__PURE__*/ ValidatorForClassifier(ValueIsRegExp, rejectNil, 'JavaScript RegExp object'), expectedRegExp = expectRegExp;\n/**** allow[ed]OneOf ****/\nfunction allowOneOf(Description, Argument, ValueList) {\n    return (Argument == null\n        ? Argument\n        : expectedOneOf(Description, Argument, ValueList));\n}\nvar allowedOneOf = allowOneOf;\n/**** expect[ed]OneOf ****/\nfunction expectOneOf(Description, Argument, ValueList) {\n    if (Argument == null) {\n        throwError(\"MissingArgument: no \".concat(escaped(Description), \" given\"));\n    }\n    if (ValueIsOneOf(Argument, ValueList)) {\n        return ( // unboxes any primitives\n        (Argument == null) || (typeof Argument.valueOf !== 'function')\n            ? Argument\n            : Argument.valueOf());\n    }\n    else {\n        throwError(\"InvalidArgument: the given \".concat(escaped(Description), \" is not among the supported values\"));\n    }\n}\nvar expectedOneOf = expectOneOf;\n/**** allow/expect[ed]Color ****/\nvar allowColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, acceptNil, 'CSS color specification'), allowedColor = allowColor;\nvar expectColor = /*#__PURE__*/ ValidatorForClassifier(ValueIsColor, rejectNil, 'CSS color specification'), expectedColor = expectColor;\n/**** allow/expect[ed]EMailAddress ****/\nvar allowEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, acceptNil, 'EMail address'), allowedEMailAddress = allowEMailAddress;\nvar expectEMailAddress = /*#__PURE__*/ ValidatorForClassifier(ValueIsEMailAddress, rejectNil, 'EMail address'), expectedEMailAddress = expectEMailAddress;\n/**** allow/expect[ed]URL ****/\nvar allowURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, acceptNil, 'URL'), allowedURL = allowURL;\nvar expectURL = /*#__PURE__*/ ValidatorForClassifier(ValueIsURL, rejectNil, 'URL'), expectedURL = expectURL;\n/**** escaped - escapes all control characters in a given string ****/\nfunction escaped(Text) {\n    var EscapeSequencePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        return (Match === '\\\\' ? '\\\\\\\\' : Match);\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** unescaped - evaluates all escape sequences in a given string ****/\nfunction unescaped(Text) {\n    var EscapeSequencePattern = /\\\\[0bfnrtv'\"\\\\\\/]|\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}/g;\n    return Text\n        .replace(EscapeSequencePattern, function (Match) {\n        switch (Match) {\n            case '\\\\0': return '\\0';\n            case '\\\\b': return '\\b';\n            case '\\\\f': return '\\f';\n            case '\\\\n': return '\\n';\n            case '\\\\r': return '\\r';\n            case '\\\\t': return '\\t';\n            case '\\\\v': return '\\v';\n            case '\\\\\\'': return \"'\";\n            case '\\\\\"': return '\"';\n            case '\\\\\\\\': return \"\\\\\";\n            default: {\n                var CharCode = parseInt(Match.slice(2), 16);\n                return String.fromCharCode(CharCode);\n            }\n        }\n    });\n}\n/**** quotable - makes a given string ready to be put in single/double quotes ****/\nfunction quotable(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    var EscSeqOrSglQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|'/g;\n    var EscSeqOrDblQuotePattern = /\\\\x[0-9a-zA-Z]{2}|\\\\u[0-9a-zA-Z]{4}|\\\\[0bfnrtv'\"\\\\\\/]?|\"/g;\n    var CtrlCharCodePattern = /[\\x00-\\x1f\\x7f-\\x9f]/g;\n    return Text\n        .replace(Quote === \"'\" ? EscSeqOrSglQuotePattern : EscSeqOrDblQuotePattern, function (Match) {\n        switch (Match) {\n            case \"'\": return \"\\\\'\";\n            case '\"': return '\\\\\"';\n            case '\\\\': return '\\\\\\\\';\n            default: return Match;\n        }\n    })\n        .replace(CtrlCharCodePattern, function (Match) {\n        switch (Match) {\n            case '\\0': return '\\\\0';\n            case '\\b': return '\\\\b';\n            case '\\f': return '\\\\f';\n            case '\\n': return '\\\\n';\n            case '\\r': return '\\\\r';\n            case '\\t': return '\\\\t';\n            case '\\v': return '\\\\v';\n            default: {\n                var HexCode = Match.charCodeAt(0).toString(16);\n                return '\\\\x' + '00'.slice(HexCode.length) + HexCode;\n            }\n        }\n    });\n}\n/**** quoted ****/\nfunction quoted(Text, Quote) {\n    if (Quote === void 0) { Quote = '\"'; }\n    return Quote + quotable(Text, Quote) + Quote;\n}\n/**** HTMLsafe ****/\nfunction HTMLsafe(Argument, EOLReplacement) {\n    EOLReplacement = (EOLReplacement || '').trim() || '<br/>';\n    return Argument.replace(/[&<>\"'\\u0000-\\u001F\\u007F-\\u009F\\\\]/g, function (Match) {\n        switch (Match) {\n            case '&': return '&amp;';\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case \"'\": return '&apos;';\n            case '\\b': return '&#92;b';\n            case '\\f': return '&#92;f';\n            case '\\n': return EOLReplacement;\n            case '\\r': return '&#92;r';\n            case '\\t': return '&#92;t';\n            case '\\v': return '&#92;v';\n            case '\\\\': return '&#92;';\n            default:\n                var Result = Match.charCodeAt(0).toString(16);\n                return '&#x0000'.substring(3, 7 - Result.length) + Result + ';';\n        }\n    });\n}\n/**** MarkDownSafe ****/\nfunction MarkDownSafe(Argument, EOLReplacement) {\n    return HTMLsafe(Argument, EOLReplacement).replace(/:/g, '&#58;');\n}\n/**** ValuesDiffer ****/\nfunction ValuesDiffer(thisValue, otherValue, Mode) {\n    if (thisValue === otherValue) {\n        return false;\n    }\n    var thisType = typeof thisValue;\n    if (thisType !== typeof otherValue) {\n        return true;\n    }\n    /**** ArraysDiffer ****/\n    function ArraysDiffer(thisArray, otherArray, Mode) {\n        if (!Array.isArray(otherArray)) {\n            return true;\n        }\n        if (thisArray.length !== otherArray.length) {\n            return true;\n        }\n        for (var i = 0, l = thisArray.length; i < l; i++) {\n            if (ValuesDiffer(thisArray[i], otherArray[i], Mode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**** ObjectsDiffer ****/\n    function ObjectsDiffer(thisObject, otherObject, Mode) {\n        if (Object.getPrototypeOf(thisObject) !== Object.getPrototypeOf(otherObject)) {\n            return true;\n        }\n        for (var key in thisObject) {\n            if (!(key in otherObject)) {\n                return true;\n            }\n        }\n        for (var key in otherObject) {\n            if (!(key in thisObject)) {\n                return true;\n            }\n            if (ValuesDiffer(thisObject[key], otherObject[key], Mode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    switch (thisType) {\n        case 'undefined':\n        case 'boolean':\n        case 'string':\n        case 'function': return true; // most primitives are compared using \"===\"\n        case 'number': return ((isNaN(thisValue) !== isNaN(otherValue)) ||\n            (Math.abs(thisValue - otherValue) > Number.EPSILON));\n        case 'object':\n            if (thisValue == null) {\n                return true;\n            } // since \"other_value\" != null!\n            if (otherValue == null) {\n                return true;\n            } // since \"this_value\" != null!\n            if ((Mode === 'by-value') && ((thisValue instanceof Boolean) ||\n                (thisValue instanceof Number) ||\n                (thisValue instanceof String))) {\n                return (thisValue.valueOf() !== otherValue.valueOf());\n            }\n            if (Array.isArray(thisValue)) {\n                return ArraysDiffer(thisValue, otherValue, Mode);\n            }\n            return (Mode === 'by-reference'\n                ? true // because (thisValue !== otherValue)\n                : ObjectsDiffer(thisValue, otherValue, Mode));\n        default: return true; // unsupported property type\n    }\n    return true;\n}\n/**** ValuesAreEqual ****/\nfunction ValuesAreEqual(thisValue, otherValue, Mode) {\n    return !ValuesDiffer(thisValue, otherValue, Mode);\n}\n/**** ObjectIsEmpty ****/\nfunction ObjectIsEmpty(Candidate) {\n    expectObject('candidate', Candidate);\n    for (var Key in Candidate) {\n        if (Object_hasOwnProperty(Candidate, Key)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**** ObjectIsNotEmpty ****/\nfunction ObjectIsNotEmpty(Candidate) {\n    return !ObjectIsEmpty(Candidate);\n}\n/**** StringIsEmpty ****/\nfunction StringIsEmpty(Candidate) {\n    return /^\\s*$/.test(Candidate);\n}\n/**** StringIsNotEmpty ****/\nfunction StringIsNotEmpty(Candidate) {\n    return !StringIsEmpty(Candidate);\n}\n/**** constrained ****/\nfunction constrained(Value, Minimum, Maximum) {\n    if (Minimum === void 0) { Minimum = -Infinity; }\n    if (Maximum === void 0) { Maximum = Infinity; }\n    return Math.max(Minimum, Math.min(Value, Maximum));\n}\n//------------------------------------------------------------------------------\n//--                             Color Utilities                              --\n//------------------------------------------------------------------------------\n// built-in color names (see http://www.w3.org/TR/SVG/types.html#ColorKeywords) ----\nvar ColorSet = {\n    transparent: 'rgba(0,0,0,0,0.0)',\n    aliceblue: 'rgba(240,248,255,1.0)', lightpink: 'rgba(255,182,193,1.0)',\n    antiquewhite: 'rgba(250,235,215,1.0)', lightsalmon: 'rgba(255,160,122,1.0)',\n    aqua: 'rgba(0,255,255,1.0)', lightseagreen: 'rgba(32,178,170,1.0)',\n    aquamarine: 'rgba(127,255,212,1.0)', lightskyblue: 'rgba(135,206,250,1.0)',\n    azure: 'rgba(240,255,255,1.0)', lightslategray: 'rgba(119,136,153,1.0)',\n    beige: 'rgba(245,245,220,1.0)', lightslategrey: 'rgba(119,136,153,1.0)',\n    bisque: 'rgba(255,228,196,1.0)', lightsteelblue: 'rgba(176,196,222,1.0)',\n    black: 'rgba(0,0,0,1.0)', lightyellow: 'rgba(255,255,224,1.0)',\n    blanchedalmond: 'rgba(255,235,205,1.0)', lime: 'rgba(0,255,0,1.0)',\n    blue: 'rgba(0,0,255,1.0)', limegreen: 'rgba(50,205,50,1.0)',\n    blueviolet: 'rgba(138,43,226,1.0)', linen: 'rgba(250,240,230,1.0)',\n    brown: 'rgba(165,42,42,1.0)', magenta: 'rgba(255,0,255,1.0)',\n    burlywood: 'rgba(222,184,135,1.0)', maroon: 'rgba(128,0,0,1.0)',\n    cadetblue: 'rgba(95,158,160,1.0)', mediumaquamarine: 'rgba(102,205,170,1.0)',\n    chartreuse: 'rgba(127,255,0,1.0)', mediumblue: 'rgba(0,0,205,1.0)',\n    chocolate: 'rgba(210,105,30,1.0)', mediumorchid: 'rgba(186,85,211,1.0)',\n    coral: 'rgba(255,127,80,1.0)', mediumpurple: 'rgba(147,112,219,1.0)',\n    cornflowerblue: 'rgba(100,149,237,1.0)', mediumseagreen: 'rgba(60,179,113,1.0)',\n    cornsilk: 'rgba(255,248,220,1.0)', mediumslateblue: 'rgba(123,104,238,1.0)',\n    crimson: 'rgba(220,20,60,1.0)', mediumspringgreen: 'rgba(0,250,154,1.0)',\n    cyan: 'rgba(0,255,255,1.0)', mediumturquoise: 'rgba(72,209,204,1.0)',\n    darkblue: 'rgba(0,0,139,1.0)', mediumvioletred: 'rgba(199,21,133,1.0)',\n    darkcyan: 'rgba(0,139,139,1.0)', midnightblue: 'rgba(25,25,112,1.0)',\n    darkgoldenrod: 'rgba(184,134,11,1.0)', mintcream: 'rgba(245,255,250,1.0)',\n    darkgray: 'rgba(169,169,169,1.0)', mistyrose: 'rgba(255,228,225,1.0)',\n    darkgreen: 'rgba(0,100,0,1.0)', moccasin: 'rgba(255,228,181,1.0)',\n    darkgrey: 'rgba(169,169,169,1.0)', navajowhite: 'rgba(255,222,173,1.0)',\n    darkkhaki: 'rgba(189,183,107,1.0)', navy: 'rgba(0,0,128,1.0)',\n    darkmagenta: 'rgba(139,0,139,1.0)', oldlace: 'rgba(253,245,230,1.0)',\n    darkolivegreen: 'rgba(85,107,47,1.0)', olive: 'rgba(128,128,0,1.0)',\n    darkorange: 'rgba(255,140,0,1.0)', olivedrab: 'rgba(107,142,35,1.0)',\n    darkorchid: 'rgba(153,50,204,1.0)', orange: 'rgba(255,165,0,1.0)',\n    darkred: 'rgba(139,0,0,1.0)', orangered: 'rgba(255,69,0,1.0)',\n    darksalmon: 'rgba(233,150,122,1.0)', orchid: 'rgba(218,112,214,1.0)',\n    darkseagreen: 'rgba(143,188,143,1.0)', palegoldenrod: 'rgba(238,232,170,1.0)',\n    darkslateblue: 'rgba(72,61,139,1.0)', palegreen: 'rgba(152,251,152,1.0)',\n    darkslategray: 'rgba(47,79,79,1.0)', paleturquoise: 'rgba(175,238,238,1.0)',\n    darkslategrey: 'rgba(47,79,79,1.0)', palevioletred: 'rgba(219,112,147,1.0)',\n    darkturquoise: 'rgba(0,206,209,1.0)', papayawhip: 'rgba(255,239,213,1.0)',\n    darkviolet: 'rgba(148,0,211,1.0)', peachpuff: 'rgba(255,218,185,1.0)',\n    deeppink: 'rgba(255,20,147,1.0)', peru: 'rgba(205,133,63,1.0)',\n    deepskyblue: 'rgba(0,191,255,1.0)', pink: 'rgba(255,192,203,1.0)',\n    dimgray: 'rgba(105,105,105,1.0)', plum: 'rgba(221,160,221,1.0)',\n    dimgrey: 'rgba(105,105,105,1.0)', powderblue: 'rgba(176,224,230,1.0)',\n    dodgerblue: 'rgba(30,144,255,1.0)', purple: 'rgba(128,0,128,1.0)',\n    firebrick: 'rgba(178,34,34,1.0)', red: 'rgba(255,0,0,1.0)',\n    floralwhite: 'rgba(255,250,240,1.0)', rosybrown: 'rgba(188,143,143,1.0)',\n    forestgreen: 'rgba(34,139,34,1.0)', royalblue: 'rgba(65,105,225,1.0)',\n    fuchsia: 'rgba(255,0,255,1.0)', saddlebrown: 'rgba(139,69,19,1.0)',\n    gainsboro: 'rgba(220,220,220,1.0)', salmon: 'rgba(250,128,114,1.0)',\n    ghostwhite: 'rgba(248,248,255,1.0)', sandybrown: 'rgba(244,164,96,1.0)',\n    gold: 'rgba(255,215,0,1.0)', seagreen: 'rgba(46,139,87,1.0)',\n    goldenrod: 'rgba(218,165,32,1.0)', seashell: 'rgba(255,245,238,1.0)',\n    gray: 'rgba(128,128,128,1.0)', sienna: 'rgba(160,82,45,1.0)',\n    green: 'rgba(0,128,0,1.0)', silver: 'rgba(192,192,192,1.0)',\n    greenyellow: 'rgba(173,255,47,1.0)', skyblue: 'rgba(135,206,235,1.0)',\n    grey: 'rgba(128,128,128,1.0)', slateblue: 'rgba(106,90,205,1.0)',\n    honeydew: 'rgba(240,255,240,1.0)', slategray: 'rgba(112,128,144,1.0)',\n    hotpink: 'rgba(255,105,180,1.0)', slategrey: 'rgba(112,128,144,1.0)',\n    indianred: 'rgba(205,92,92,1.0)', snow: 'rgba(255,250,250,1.0)',\n    indigo: 'rgba(75,0,130,1.0)', springgreen: 'rgba(0,255,127,1.0)',\n    ivory: 'rgba(255,255,240,1.0)', steelblue: 'rgba(70,130,180,1.0)',\n    khaki: 'rgba(240,230,140,1.0)', tan: 'rgba(210,180,140,1.0)',\n    lavender: 'rgba(230,230,250,1.0)', teal: 'rgba(0,128,128,1.0)',\n    lavenderblush: 'rgba(255,240,245,1.0)', thistle: 'rgba(216,191,216,1.0)',\n    lawngreen: 'rgba(124,252,0,1.0)', tomato: 'rgba(255,99,71,1.0)',\n    lemonchiffon: 'rgba(255,250,205,1.0)', turquoise: 'rgba(64,224,208,1.0)',\n    lightblue: 'rgba(173,216,230,1.0)', violet: 'rgba(238,130,238,1.0)',\n    lightcoral: 'rgba(240,128,128,1.0)', wheat: 'rgba(245,222,179,1.0)',\n    lightcyan: 'rgba(224,255,255,1.0)', white: 'rgba(255,255,255,1.0)',\n    lightgoldenrodyellow: 'rgba(250,250,210,1.0)', whitesmoke: 'rgba(245,245,245,1.0)',\n    lightgray: 'rgba(211,211,211,1.0)', yellow: 'rgba(255,255,0,1.0)',\n    lightgreen: 'rgba(144,238,144,1.0)', yellowgreen: 'rgba(154,205,50,1.0)',\n    lightgrey: 'rgba(211,211,211,1.0)',\n};\n/**** HexColor - converts a given color to #rrggbbaa ****/\nfunction HexColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        Color = ColorSet[lowerColor];\n    } // do not return here as color is now in RGBA format\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return Color + 'FF';\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return Color;\n    }\n    var HexDigit = '0123456789ABCDEF';\n    function dec2hex(Value) {\n        if (Value > 255) {\n            Value = 255;\n        }\n        return HexDigit[Math.trunc(Value / 16)] + HexDigit[Value % 16];\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; // not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) + 'FF');\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([01]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return ('#' +\n            dec2hex(parseInt(Match[1], 10)) +\n            dec2hex(parseInt(Match[2], 10)) +\n            dec2hex(parseInt(Match[3], 10)) +\n            dec2hex(parseFloat(Match[4]) * 255));\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** RGBAColor - converts a given color to RGBA(r,g,b,a) ****/\nfunction RGBAColor(Color) {\n    var lowerColor = Color.toLowerCase();\n    if (ColorSet.hasOwnProperty(lowerColor)) {\n        // @ts-ignore TS dislikes indexing with literal keys\n        return ColorSet[lowerColor]; // color is already in RGBA format\n    }\n    if (/^#[a-fA-F0-9]{6}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ', 1' +\n            ')');\n    }\n    if (/^#[a-fA-F0-9]{8}$/.test(Color)) {\n        return ('rgba(' +\n            parseInt(Color.slice(1, 3), 16) + ',' +\n            parseInt(Color.slice(3, 5), 16) + ',' +\n            parseInt(Color.slice(5, 7), 16) + ',' +\n            (parseInt(Color.slice(7), 16) / 255) +\n            ')');\n    }\n    var RGBPattern = /^rgb\\(([0-9]+),\\s*([0-9]+),\\s*([0-9]+)\\)$/i; //not perfect\n    var Match = RGBPattern.exec(Color);\n    if (Match != null) {\n        return Color.slice(0, Color.length - 1) + ',1)';\n    }\n    var RGBAPattern = /^rgba\\(([(0-9]+),\\s*([0-9]+),\\s*([0-9]+),\\s*([0]?[.][0-9]+|[01])\\)$/i; // not perfect\n    Match = RGBAPattern.exec(Color);\n    if (Match != null) {\n        return Color;\n    }\n    throwError('InvalidArgument: the given Value is not a valid CSS Color specification');\n}\n/**** shortHexColor - converts a given color into #RRGGBB ****/\nfunction shortHexColor(Color) {\n    return HexColor(Color).slice(0, 7);\n}\n\nexport { ColorSet, FunctionWithName, HTMLsafe, HexColor, MarkDownSafe, ObjectIsEmpty, ObjectIsNotEmpty, ObjectMergedWith, Object_hasOwnProperty, Object_isPrototypeOf, Object_propertyIsEnumerable, Object_toLocaleString, Object_toString, Object_valueOf, RGBAColor, StringIsEmpty, StringIsNotEmpty, ValidatorForClassifier, ValueExists, ValueInheritsFrom, ValueIsAnonymousFunction, ValueIsArray, ValueIsBoolean, ValueIsCardinal, ValueIsColor, ValueIsDate, ValueIsEMailAddress, ValueIsEmptyString, ValueIsError, ValueIsFiniteNumber, ValueIsFunction, ValueIsInstanceOf, ValueIsInteger, ValueIsIntegerInRange, ValueIsList, ValueIsListSatisfying, ValueIsMissing, ValueIsNaN, ValueIsNamedFunction, ValueIsNativeFunction, ValueIsNonEmptyString, ValueIsNumber, ValueIsNumberInRange, ValueIsObject, ValueIsOneOf, ValueIsOrdinal, ValueIsPlainObject, ValueIsPromise, ValueIsRegExp, ValueIsScriptedFunction, ValueIsString, ValueIsStringMatching, ValueIsText, ValueIsTextline, ValueIsURL, ValueIsVanillaObject, ValuesAreEqual, ValuesDiffer, acceptNil, allowAnonymousFunction, allowArray, allowBoolean, allowCardinal, allowColor, allowDate, allowEMailAddress, allowError, allowFiniteNumber, allowFunction, allowInstanceOf, allowInteger, allowIntegerInRange, allowList, allowListSatisfying, allowNaN, allowNamedFunction, allowNativeFunction, allowNonEmptyString, allowNumber, allowNumberInRange, allowObject, allowOneOf, allowOrdinal, allowPlainObject, allowPromise, allowRegExp, allowScriptedFunction, allowString, allowStringMatching, allowText, allowTextline, allowURL, allowValueInheritingFrom, allowVanillaObject, allowedAnonymousFunction, allowedArray, allowedBoolean, allowedCardinal, allowedColor, allowedDate, allowedEMailAddress, allowedError, allowedFiniteNumber, allowedFunction, allowedInstanceOf, allowedInteger, allowedIntegerInRange, allowedList, allowedListSatisfying, allowedNaN, allowedNamedFunction, allowedNativeFunction, allowedNonEmptyString, allowedNumber, allowedNumberInRange, allowedObject, allowedOneOf, allowedOrdinal, allowedPlainObject, allowedPromise, allowedRegExp, allowedScriptedFunction, allowedString, allowedStringMatching, allowedText, allowedTextline, allowedURL, allowedValueInheritingFrom, allowedVanillaObject, constrained, escaped, expectAnonymousFunction, expectArray, expectBoolean, expectCardinal, expectColor, expectDate, expectEMailAddress, expectError, expectFiniteNumber, expectFunction, expectInstanceOf, expectInteger, expectIntegerInRange, expectList, expectListSatisfying, expectNaN, expectNamedFunction, expectNativeFunction, expectNonEmptyString, expectNumber, expectNumberInRange, expectObject, expectOneOf, expectOrdinal, expectPlainObject, expectPromise, expectRegExp, expectScriptedFunction, expectString, expectStringMatching, expectText, expectTextline, expectURL, expectValue, expectValueInheritingFrom, expectVanillaObject, expectedAnonymousFunction, expectedArray, expectedBoolean, expectedCardinal, expectedColor, expectedDate, expectedEMailAddress, expectedError, expectedFiniteNumber, expectedFunction, expectedInstanceOf, expectedInteger, expectedIntegerInRange, expectedList, expectedListSatisfying, expectedNaN, expectedNamedFunction, expectedNativeFunction, expectedNonEmptyString, expectedNumber, expectedNumberInRange, expectedObject, expectedOneOf, expectedOrdinal, expectedPlainObject, expectedPromise, expectedRegExp, expectedScriptedFunction, expectedString, expectedStringMatching, expectedText, expectedTextline, expectedURL, expectedValue, expectedValueInheritingFrom, expectedVanillaObject, global, quotable, quoted, rejectNil, shortHexColor, throwError, unescaped, validatedArgument };\n//# sourceMappingURL=javascript-interface-library.esm.js.map\n","//----------------------------------------------------------------------------//\n//                                 SVG-Turtle                                 //\n//----------------------------------------------------------------------------//\n\n  import {\n    throwError,\n    ValueIsFiniteNumber, ValueIsNumberInRange, ValueIsPlainObject,\n    ValueIsOneOf, ValueIsColor,\n    ValidatorForClassifier, acceptNil, rejectNil,\n    allowFiniteNumber, expectFiniteNumber, allowOneOf\n  } from 'javascript-interface-library'\n\n  export type TUR_Location  = number         // mainly for illustrative purposes\n  export type TUR_Dimension = number                                     // dto.\n  export type TUR_Angle     = number                                     // dto.\n  export type TUR_Color     = string                                     // dto.\n\n  export const TUR_Lineatures = ['solid','dotted','dashed']\n  export type  TUR_Lineature  = typeof TUR_Lineatures[number]\n\n  export const TUR_Joins = ['bevel','miter','round']\n  export type  TUR_Join  = typeof TUR_Joins[number]\n\n  export const TUR_Caps = ['butt','round','square']\n  export type  TUR_Cap  = typeof TUR_Caps[number]\n\n  export type TUR_PathOptionSet = {\n    x?:TUR_Location, y?:TUR_Location, Direction?:TUR_Angle,\n    Width?:TUR_Dimension, Color?:TUR_Color, Fill?:TUR_Color,\n    Lineature?:TUR_Lineature, Join?:TUR_Join, Cap?:TUR_Cap\n  }\n\n  export type TUR_Position = {\n    x:TUR_Location, y:TUR_Location\n  }\n\n  export type TUR_Alignment = {\n    x:TUR_Location, y:TUR_Location, Direction:TUR_Angle\n  }\n\n/**** ValueIsPosition ****/\n\n  export function ValueIsPosition (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value)    &&\n      ValueIsFiniteNumber(Value.x) &&\n      ValueIsFiniteNumber(Value.y)\n    )\n  }\n\n/**** allow/expect[ed]Position ****/\n\n  export const allowPosition = ValidatorForClassifier(\n    ValueIsPosition, acceptNil, 'turtle position'\n  ), allowedPosition = allowPosition\n\n  export const expectPosition = ValidatorForClassifier(\n    ValueIsPosition, rejectNil, 'turtle position'\n  ), expectedPosition = expectPosition\n\n/**** ValueIsAlignment ****/\n\n  export function ValueIsAlignment (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value)    &&\n      ValueIsFiniteNumber(Value.x) &&\n      ValueIsFiniteNumber(Value.y) &&\n      ValueIsFiniteNumber(Value.Direction)\n    )\n  }\n\n/**** allow/expect[ed]Alignment ****/\n\n  export const allowAlignment = ValidatorForClassifier(\n    ValueIsAlignment, acceptNil, 'turtle alignment'\n  ), allowedAlignment = allowAlignment\n\n  export const expectAlignment = ValidatorForClassifier(\n    ValueIsAlignment, rejectNil, 'turtle alignment'\n  ), expectedAlignment = expectAlignment\n\n/**** ValueIsPathOptionSet ****/\n\n  export function ValueIsPathOptionSet (Value:any):boolean {\n    return (\n      ValueIsPlainObject(Value) &&\n      ((Value.x == null)         || ValueIsFiniteNumber(Value.x)) &&\n      ((Value.y == null)         || ValueIsFiniteNumber(Value.y)) &&\n      ((Value.Direction == null) || ValueIsFiniteNumber(Value.Direction)) &&\n      ((Value.Width == null)     || ValueIsNumberInRange(Value.Width, 0)) &&\n      ((Value.Color == null)     || ValueIsColor(Value.Color)) &&\n      ((Value.Fill == null)      || ValueIsColor(Value.Fill)) &&\n      ((Value.Lineature == null) || ValueIsOneOf(Value.Lineature,TUR_Lineatures)) &&\n      ((Value.Join == null)      || ValueIsOneOf(Value.Join,TUR_Joins)) &&\n      ((Value.Cap == null)       || ValueIsOneOf(Value.Cap,TUR_Caps))\n    )\n  }\n\n/**** allow/expect[ed]PathOptionSet ****/\n\n  export const allowPathOptionSet = ValidatorForClassifier(\n    ValueIsPathOptionSet, acceptNil, 'turtle path option set'\n  ), allowedPathOptionSet = allowPathOptionSet\n\n  export const expectPathOptionSet = ValidatorForClassifier(\n    ValueIsPathOptionSet, rejectNil, 'turtle path option set'\n  ), expectedPathOptionSet = expectPathOptionSet\n\n/**** Graphic ****/\n\n  export class Graphic {\n    private SVGContent:string            = ''\n    private currentPath:string|undefined = undefined\n\n    private minX:TUR_Location|undefined;  private maxX:TUR_Location|undefined\n    private minY:TUR_Location|undefined;  private maxY:TUR_Location|undefined\n\n    private currentX:TUR_Location          = 0\n    private currentY:TUR_Location          = 0\n    private currentDirection:TUR_Angle     = 0\n\n    private currentWidth:TUR_Dimension     = 1\n    private currentColor:TUR_Color         = '#000000'\n    private currentFill:TUR_Color          = 'none'\n    private currentLineature:TUR_Lineature = 'solid'\n    private currentJoin:TUR_Join           = 'round'\n    private currentCap:TUR_Cap             = 'round'\n\n  /**** _initialize ****/\n\n    private _initialize ():void {\n      if (this.currentX         == null) { this.currentX         = 0 }\n      if (this.currentY         == null) { this.currentY         = 0 }\n      if (this.currentDirection == null) { this.currentDirection = 0 }\n\n      if (this.currentWidth     == null) { this.currentWidth     = 1 }\n      if (this.currentColor     == null) { this.currentColor     = '#000000' }\n      if (this.currentFill      == null) { this.currentFill      = 'none' }\n      if (this.currentLineature == null) { this.currentLineature = 'solid' }\n      if (this.currentJoin      == null) { this.currentJoin      = 'round' }\n      if (this.currentCap       == null) { this.currentCap       = 'round' }\n    }\n\n  /**** reset ****/\n\n    public reset ():Graphic {\n      this.currentX         = 0\n      this.currentY         = 0\n      this.currentDirection = 0\n\n      this.currentWidth     = 1\n      this.currentColor     = '#000000'\n      this.currentFill      = 'none'\n      this.currentLineature = 'solid'\n      this.currentJoin      = 'round'\n      this.currentCap       = 'round'\n\n      return this\n    }\n\n  /**** beginPath ****/\n\n    public beginPath (PathOptionSet?:TUR_PathOptionSet):Graphic {\n      allowPathOptionSet('option set',PathOptionSet)\n\n      if (this.currentPath != null) {\n        this.endPath()\n      }\n\n      this._initialize()\n\n      if (PathOptionSet != null) {\n        if (PathOptionSet.x         != null) { this.currentX         = PathOptionSet.x as TUR_Location }\n        if (PathOptionSet.y         != null) { this.currentY         = PathOptionSet.y as TUR_Location }\n        if (PathOptionSet.Direction != null) { this.currentDirection = PathOptionSet.Direction as TUR_Angle }\n        if (PathOptionSet.Width     != null) { this.currentWidth     = PathOptionSet.Width as TUR_Dimension }\n        if (PathOptionSet.Color     != null) { this.currentColor     = PathOptionSet.Color as TUR_Color }\n        if (PathOptionSet.Fill      != null) { this.currentFill      = PathOptionSet.Fill as TUR_Color }\n        if (PathOptionSet.Lineature != null) { this.currentLineature = PathOptionSet.Lineature as TUR_Lineature }\n        if (PathOptionSet.Join      != null) { this.currentJoin      = PathOptionSet.Join as TUR_Join }\n        if (PathOptionSet.Cap       != null) { this.currentCap       = PathOptionSet.Cap as TUR_Cap }\n      }\n\n      if (this.minX == null) {\n        this.minX = this.maxX = this.currentX\n        this.minY = this.maxY = this.currentY\n      }\n\n      this.currentPath = '<path ' +\n        'fill=\"'            + this.currentFill  + '\" ' +\n        'stroke=\"'          + this.currentColor + '\" ' +\n        'stroke-width=\"'    + this.currentWidth + '\" ' +\n        'stroke-linejoin=\"' + this.currentJoin  + '\" ' +\n        'stroke-linecap=\"'  + this.currentCap   + '\" '\n\n        switch (this.currentLineature) {\n          case 'dotted':\n            this.currentPath += 'stroke-dasharray=\"1\" '\n            break\n          case 'dashed':\n            this.currentPath += 'stroke-dasharray=\"3 1\" '\n            break\n          case 'solid': default:\n            this.currentPath += 'stroke-dasharray=\"none\" '\n        }\n      this.currentPath += 'd=\"'\n\n      this.moveTo(this.currentX,this.currentY)\n\n      return this\n    }\n\n  /**** turn ****/\n\n    public turn (DirectionChange:TUR_Angle):Graphic {\n      expectFiniteNumber('direction change',DirectionChange)\n\n      this.currentDirection += DirectionChange\n\n      return this\n    }\n\n  /**** turnTo ****/\n\n    public turnTo (Direction:TUR_Angle):Graphic {\n      expectFiniteNumber('direction',Direction)\n\n      this.currentDirection = Direction\n\n      return this\n    }\n\n  /**** turnLeft ****/\n\n    public turnLeft (DirectionChange:TUR_Angle):Graphic {\n      expectFiniteNumber('direction change',DirectionChange)\n\n      this.currentDirection -= DirectionChange\n\n      return this\n    }\n\n  /**** turnRight ****/\n\n    public turnRight (DirectionChange:TUR_Angle):Graphic {\n      expectFiniteNumber('direction change',DirectionChange)\n\n      this.currentDirection += DirectionChange\n\n      return this\n    }\n\n  /**** move ****/\n\n    public move (Distance:TUR_Location):Graphic {\n      expectFiniteNumber('distance',Distance)\n\n      let DirectionInRadians = this.currentDirection * Math.PI/180\n      this.moveTo(                                               // DRY approach\n        (this.currentX || 0) + Distance * Math.cos(DirectionInRadians),\n        (this.currentY || 0) + Distance * Math.sin(DirectionInRadians)\n      )\n\n      return this\n    }\n\n  /**** moveTo ****/\n\n    public moveTo (x:TUR_Location, y:TUR_Location):Graphic {\n      expectFiniteNumber('x coordinate',x)\n      expectFiniteNumber('y coordinate',y)\n\n      this.currentX = x\n      this.currentY = y\n\n      if (this.currentPath != null) {\n        this.currentPath += 'M ' + rounded(x) + ',' + rounded(y) + ' '\n      }\n\n      return this\n    }\n\n  /**** draw ****/\n\n    public draw (Distance:TUR_Location):Graphic {\n      expectFiniteNumber('distance',Distance)\n\n      let DirectionInRadians = this.currentDirection * Math.PI/180\n      this.drawTo(                                               // DRY approach\n        (this.currentX || 0) + Distance * Math.cos(DirectionInRadians),\n        (this.currentY || 0) + Distance * Math.sin(DirectionInRadians)\n      )\n\n      return this\n    }\n\n  /**** drawTo ****/\n\n    public drawTo (x:TUR_Location, y:TUR_Location):Graphic {\n      expectFiniteNumber('x coordinate',x)\n      expectFiniteNumber('y coordinate',y)\n\n      if (this.currentPath == null) {\n        this.beginPath()\n      }\n\n      this._updateBoundingBox(\n        this.currentX-this.currentWidth/2, this.currentX+this.currentWidth/2,\n        this.currentY-this.currentWidth/2, this.currentY+this.currentWidth/2\n      )\n\n      this.currentX = x\n      this.currentY = y\n\n      this.currentPath += 'L ' + rounded(x) + ',' + rounded(y) + ' '\n\n      this._updateBoundingBox(\n        this.currentX-this.currentWidth/2, this.currentX+this.currentWidth/2,\n        this.currentY-this.currentWidth/2, this.currentY+this.currentWidth/2\n      )\n\n      return this\n    }\n\n  /**** curveLeft/Right ****/\n\n    public curveLeft (\n      Angle:TUR_Angle, rx:TUR_Dimension, ry?:TUR_Dimension\n    ):Graphic {\n      return this._curve(Angle, rx,ry, false)\n    }\n\n    public curveRight (\n      Angle:TUR_Angle, rx:TUR_Dimension, ry?:TUR_Dimension\n    ):Graphic {\n      return this._curve(Angle, rx,ry, true)\n    }\n\n  /**** _curve ****/\n\n    private _curve (\n      Angle:TUR_Angle, rx:TUR_Dimension, ry:TUR_Dimension|undefined,\n      clockwise:boolean\n    ):Graphic {\n      expectFiniteNumber('turn angle',Angle)\n      expectFiniteNumber  ('x radius',rx)\n      allowFiniteNumber   ('y radius',ry)\n        if (ry == null) { ry = rx }\n\n      let absAngle = Math.abs(Angle)\n      if (absAngle < 1e-6) { return this }\n\n      const pi      = Math.PI;    const sin = Math.sin\n      const deg2rad = pi/180;     const cos = Math.cos\n\n      if (this.currentPath == null) {\n        this.beginPath()\n      }\n\n    /**** fix ellipse starting point ****/\n\n      let x0 = this.currentX\n      let y0 = this.currentY\n\n      this._updateBoundingBox(\n        x0-this.currentWidth/2, x0+this.currentWidth/2,\n        y0-this.currentWidth/2, y0+this.currentWidth/2\n      )\n\n    /**** compute ellipse center ****/\n\n      let Direction          = this.currentDirection\n      let DirectionInRadians = Direction * deg2rad\n\n      let NormalInRadians = DirectionInRadians + (clockwise ? pi/2 : -pi/2)\n\n      let cx = x0 + ry * cos(NormalInRadians)                // \"ry\" is correct!\n      let cy = y0 + ry * sin(NormalInRadians)                            // dto.\n\n    /**** compute ellipse end point ****/\n\n      let AngleInRadians = (\n        clockwise ? -pi/2 + Angle * deg2rad : pi/2 - Angle * deg2rad\n      )\n\n      let auxX = rx * cos(AngleInRadians)\n      let auxY = ry * sin(AngleInRadians)\n\n      let x1 = cx + auxX * cos(DirectionInRadians) - auxY * sin(DirectionInRadians)\n      let y1 = cy + auxX * sin(DirectionInRadians) + auxY * cos(DirectionInRadians)\n\n    /**** construct SVG path ****/\n\n      let fullEllipse  = (absAngle >= 360)\n      let largeArcFlag = (absAngle >= 180 ? 1 : 0)\n      let SweepFlag    = (clockwise ? (Angle >= 0 ? 1 : 0) : (Angle >= 0 ? 0 : 1))\n\n      if (fullEllipse) {\n        auxX = cx + (cx-x0)\n        auxY = cy + (cy-y0)\n\n        this.currentPath += (\n          'A ' + rounded(rx) + ' ' + rounded(ry) + ' ' +\n          rounded(Direction) + ' 1 ' + SweepFlag + ' ' +\n          rounded(auxX) + ' ' + rounded(auxY) + ' '\n        ) + (\n          'A ' + rounded(rx) + ' ' + rounded(ry) + ' ' +\n          rounded(Direction) + ' 1 ' + SweepFlag + ' ' +\n          rounded(x0) + ' ' + rounded(y0) + ' '\n        ) + 'M ' + rounded(x1) + ' ' + rounded(y1) + ' '\n      } else {\n        this.currentPath += (\n          'A ' + rounded(rx) + ' ' + rounded(ry) + ' ' +\n          rounded(Direction) + ' ' + largeArcFlag + ' ' + SweepFlag + ' ' +\n          rounded(x1) + ' ' + rounded(y1) + ' '\n        )\n      }\n\n    /**** compute ellipse x/y bounds in rotated coordinate system ****/\n// see https://math.stackexchange.com/questions/91132/how-to-get-the-limits-of-rotated-ellipse\n\n      let xMax = Math.sqrt(               // still centered at origin, not cx/cy\n        rx*rx * Math.pow(cos(DirectionInRadians),2) +\n        ry*ry * Math.pow(sin(DirectionInRadians),2)\n      )\n      let yMax = Math.sqrt(                                              // dto.\n        rx*rx * Math.pow(sin(DirectionInRadians),2) +\n        ry*ry * Math.pow(cos(DirectionInRadians),2)\n      )\n\n      for (let i = 0; i < 4; i++) {\n        let xSign = (i % 2 === 0 ? 1 : -1)\n        let ySign = (i < 2       ? 1 : -1)\n\n        let x = xSign*xMax\n        let y = ySign*yMax\n\n        let PointShouldBeUsed\n        if (fullEllipse) {\n          PointShouldBeUsed = true\n        } else {\n        /**** rotate extremal points back into ellipse coordinates ****/\n\n          let maxX = x * cos(-DirectionInRadians) - y * sin(-DirectionInRadians)\n          let maxY = x * sin(-DirectionInRadians) + y * cos(-DirectionInRadians)\n\n          maxX = maxX / rx\n          maxY = maxY / ry\n\n        /**** compute extremal point angles and check if within arc ****/\n\n          let PointAngleInRadians = Math.atan2(maxY,maxX)\n\n          let StartAngleInRadians = (clockwise ? -pi/2 : pi/2)\n          let EndAngleInRadians   = AngleInRadians           // already computed\n\n          if ((StartAngleInRadians < -pi) || (EndAngleInRadians < -pi)) {\n            StartAngleInRadians += 2*pi         // that's sufficient, because...\n            EndAngleInRadians   += 2*pi        // ...\"fullEllipse\" is false here\n          }\n\n          if (StartAngleInRadians > EndAngleInRadians) {\n            let temp = StartAngleInRadians\n            StartAngleInRadians = EndAngleInRadians\n            EndAngleInRadians = temp\n          }\n\n          PointShouldBeUsed = (                                  // common cases\n            (StartAngleInRadians <= PointAngleInRadians) &&\n            (PointAngleInRadians <= EndAngleInRadians)\n          ) || (                                                   // rare cases\n            (PointAngleInRadians < 0) &&\n            (StartAngleInRadians <= PointAngleInRadians + 2*pi) &&\n            (PointAngleInRadians + 2*pi <= EndAngleInRadians)\n          )\n        }\n\n        if (PointShouldBeUsed) {\n          this._updateBoundingBox(\n            cx + x-this.currentWidth/2, cx + x+this.currentWidth/2,\n            cy + y-this.currentWidth/2, cy + y+this.currentWidth/2\n          )\n        }\n      }\n\n    /**** update turtle ****/\n\n      this.currentDirection += (Angle >= 0 ? Angle : 180+Angle) * (clockwise ? 1 : -1)\n\n      this.currentX = x1\n      this.currentY = y1\n\n      this._updateBoundingBox(\n        x1-this.currentWidth/2, x1+this.currentWidth/2,\n        y1-this.currentWidth/2, y1+this.currentWidth/2\n      )\n\n      return this\n    }\n\n  /**** endPath ****/\n\n    public endPath ():Graphic {\n      if (this.currentPath != null) {\n        this.currentPath += '\"/>'\n\n        this.SVGContent += this.currentPath\n        this.currentPath = undefined\n      }\n\n      return this\n    }\n\n  /**** closePath ****/\n\n    public closePath ():Graphic {\n      if (this.currentPath != null) {\n        this.currentPath += 'Z'\n        this.endPath()\n      }\n\n      return this\n    }\n\n  /**** currentPosition ****/\n\n    public currentPosition ():TUR_Position {\n      return { x:this.currentX, y:this.currentY }\n    }\n\n  /**** positionAt ****/\n\n    public positionAt (Position:TUR_Position):Graphic {\n      allowPosition('turtle position',Position)\n\n      if (this.currentPath == null) {\n        this.currentX = Position.x\n        this.currentY = Position.y\n      } else {\n        this.moveTo(Position.x,Position.y)\n      }\n\n      return this\n    }\n\n  /**** currentAlignment ****/\n\n    public currentAlignment ():TUR_Alignment {\n      return {\n        x:this.currentX, y:this.currentY, Direction:this.currentDirection\n      }\n    }\n\n  /**** alignAt ****/\n\n    public alignAt (Alignment:TUR_Alignment):Graphic {\n      allowAlignment('turtle alignment',Alignment)\n\n      this.currentDirection = Alignment.Direction\n\n      if (this.currentPath == null) {\n        this.currentX = Alignment.x\n        this.currentY = Alignment.y\n      } else {\n        this.moveTo(Alignment.x,Alignment.y)\n      }\n\n      return this\n    }\n\n  /**** Limits ****/\n\n    public Limits ():{\n      xMin:number, yMin:number, xMax:number,yMax:number\n    } {\n      return {\n        xMin:this.minX || 0, yMin:this.minY || 0,\n        xMax:this.maxX || 0, yMax:this.maxY || 0\n      }\n    }\n\n  /**** asSVG ****/\n\n    public asSVG (\n      Unit?:'px'|'mm'|'cm'|'in',\n      xMin?:number,yMin?:number, xMax?:number,yMax?:number\n    ):string {\n      allowOneOf('SVG unit',Unit, ['px','mm','cm','in'])\n      allowFiniteNumber('minimal x',xMin)\n      allowFiniteNumber('maximal x',xMax)\n      allowFiniteNumber('minimal y',yMin)\n      allowFiniteNumber('maximal y',yMax)\n\n      if (this.minX == null) {  // very special case: nothing has been drawn yet\n        this.minX = this.maxX = this.minY = this.maxY = 0\n      }\n\n      if (Unit == null) { Unit = 'px' }\n      if (xMin == null) { xMin = this.minX }\n      if (xMax == null) { xMax = this.maxX }\n      if (yMin == null) { yMin = this.minY }\n      if (yMax == null) { yMax = this.maxY }\n\n// @ts-ignore TS2532 we know that xMax and xMin are defined\n      let Width  = xMax-xMin\n// @ts-ignore TS2532 we know that yMax and yMin are defined\n      let Height = yMax-yMin\n\n      if (Width  < 0) throwError('InvalidArgument: invalid x range given')\n      if (Height < 0) throwError('InvalidArgument: invalid y range given')\n\n      if (this.currentPath != null) {         // if need be: end an ongoing path\n        this.endPath()\n      }\n\n      return (\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" ' +\n          'width=\"'  + rounded(Width)  + Unit + '\" ' +\n          'height=\"' + rounded(Height) + Unit + '\" ' +\n// @ts-ignore TS2532 we know that xMin and yMin are defined\n          'viewBox=\"' + floored(xMin) + ' ' + floored(yMin) + ' ' +\n            ceiled(Width) + ' ' + ceiled(Height) + '\" ' +\n          'vector-effect=\"non-scaling-stroke\"' +\n        '>' +\n          this.SVGContent +\n        '</svg>'\n      )\n    }\n\n  /**** asSVGwith72dpi ****/\n\n    public asSVGwith72dpi (\n      Unit?:'px'|'mm'|'cm'|'in',\n      xMin?:number,yMin?:number, xMax?:number,yMax?:number\n    ):string {\n      let SVG = this.asSVG(Unit, xMin,yMin, xMax,yMax)   // also validates arg.s\n\n      let Scale = 72 / {\n        'px':25.4, 'mm':25.4, 'cm':2.54, 'in':1\n      }[Unit || 'mm']\n\n      if (xMin == null) { xMin = this.minX }\n      if (xMax == null) { xMax = this.maxX }\n      if (yMin == null) { yMin = this.minY }\n      if (yMax == null) { yMax = this.maxY }\n\n      return (\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" ' +\n// @ts-ignore TS2532 we know that xMin and yMin are defined\n          'viewBox=\"' + floored(Scale*xMin) + ' ' + floored(Scale*yMin) + ' ' +\n// @ts-ignore TS2532 we know that xMin,xMax,yMin and yMax are defined\n            ceiled(Scale*(xMax-xMin)) + ' ' + ceiled(Scale*(yMax-yMin)) + '\" ' +\n          'vector-effect=\"non-scaling-stroke\"' +\n        '>' +\n        '<g transform=\"scale(' + Scale + ',' + Scale + ')\">' +\n          SVG +\n        '</g></svg>'\n      )\n    }\n\n  /**** _updateBoundingBox ****/\n\n    private _updateBoundingBox (\n      minX:TUR_Location, maxX:TUR_Location,\n      minY:TUR_Location, maxY:TUR_Location\n    ):void {\n      this.minX = Math.min(this.minX as TUR_Location,minX)\n      this.maxX = Math.max(this.maxX as TUR_Location,maxX)\n\n      this.minY = Math.min(this.minY as TUR_Location,minY)\n      this.maxY = Math.max(this.maxY as TUR_Location,maxY)\n    }\n  }\n\n/**** rounded ****/\n\n  function rounded (Value:number):number {\n    return Math.round(Value*100)/100\n  }\n\n/**** ceiled ****/\n\n  function ceiled (Value:number):number {\n    return Math.ceil(Value*100)/100\n  }\n\n/**** floored ****/\n\n  function floored (Value:number):number {\n    return Math.floor(Value*100)/100\n  }\n\n"],"names":[],"mappings":"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"}